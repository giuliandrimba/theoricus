// Generated by CoffeeScript 1.6.3
(function() {
  var Destroyer, Generator, REPL, Server, fork, path;

  path = require('path');

  fork = (require('child_process')).fork;

  Generator = require('../commands/generator');

  Destroyer = require('../commands/destroyer');

  REPL = require('../repl/repl');

  module.exports = Server = (function() {
    Server.prototype.polvo = null;

    Server.prototype.repl = null;

    function Server(the, options) {
      var _this = this;
      this.the = the;
      if (!this.the.is_theoricus_app()) {
        return;
      }
      process.on('exit', function() {
        return _this.polvo.kill();
      });
      this.create_repl();
      this.fork_polvo();
    }

    Server.prototype.create_repl = function() {
      var _this = this;
      this.repl = new REPL;
      this.repl.on('generate', function(type, name) {
        return new Generator(_this.the, null, type, name, _this.repl);
      });
      return this.repl.on('destroy', function(type, name, options) {
        return new Destroyer(_this.the, null, type, name, options, _this.repl);
      });
    };

    Server.prototype.fork_polvo = function() {
      var polvo_path,
        _this = this;
      polvo_path = path.join(this.the.root, 'node_modules', 'polvo', 'bin', 'polvo');
      this.polvo = fork(polvo_path, ['-ws'], {
        cwd: this.the.app_root
      });
      return this.polvo.on('message', function(data) {
        switch (data.channel) {
          case 'stdout':
            return _this.repl.log(data.msg);
          case 'stderr':
            return _this.repl.err(data.msg);
          default:
            if (data.msg === 'server.started') {
              return _this.repl.start();
            }
        }
      });
    };

    return Server;

  })();

}).call(this);

/*
//@ sourceMappingURL=server.map
*/
